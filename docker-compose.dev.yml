services:
  postgres:
    image: postgres:16-alpine
    container_name: app_postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: app_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: pass
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: app_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: app_server
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      API_PREFIX: ${API_PREFIX}
      DATABASE_URL: postgresql://user:pass@postgres:5432/app
      REDIS_URL: redis://redis:6379
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_ACCESS_EXPIRATION: ${JWT_ACCESS_EXPIRATION}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION}
      OTP_EXPIRATION: ${OTP_EXPIRATION}
      MAGIC_LINK_EXPIRATION: ${MAGIC_LINK_EXPIRATION}
      EMAIL_VERIFICATION_EXPIRATION: ${EMAIL_VERIFICATION_EXPIRATION}
      BCRYPT_SALT_ROUNDS: ${BCRYPT_SALT_ROUNDS}
      RATE_LIMIT: ${RATE_LIMIT}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW}
      MAX_SIGNIN_ATTEMPTS: ${MAX_SIGNIN_ATTEMPTS}
      BLOCK_TTL: ${BLOCK_TTL}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK_URL: ${GITHUB_CALLBACK_URL}
      TURNSTILE_SECRET_KEY: ${TURNSTILE_SECRET_KEY}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_SECURE: ${EMAIL_SECURE}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network

volumes:
  postgres_data:
  pgadmin-data:
  redis_data:

networks:
  app_network:
    driver: bridge
